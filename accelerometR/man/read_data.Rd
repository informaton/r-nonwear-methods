% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/read_data.R
\name{read_data}
\alias{read_data}
\title{Read in raw accelerometry data from csv to data frame}
\usage{
read_data(path, id, x, y, z, datetime, rawstate = NULL)
}
\arguments{
\item{path}{a list of file paths specifying the locations of the files to be
read. Each path within the list should be a string.}

\item{id}{a list of subject id's in one-to-one correspondence with the list
of file paths. Each id should be a string which either denotes a single
id number corresponding to the entire file, e.g. \code{"100010"}, or a
column within the file in which the id information can be found, e.g.
\code{"SubjectID"}.}

\item{x, y, z}{A string specifying the column name in which the acceleration
data in the x, y, and z directions can be found.}

\item{datetime}{A string specifying the column name in which the timestamp
data can be found.}

\item{rawstate}{An optional string specifying the column name in which the
state data can be found. If \code{NULL}, the file is assumed not to
contain state information.}
}
\value{
A list of data frames (one per file) containing the following columns: \cr
   id \cr
   dttm \cr
   se_event \cr
   waistrawaxis1 \cr
   waistrawaxis2 \cr
   waistrawaxis3
}
\description{
Reads accelerometry data from a .csv file and outputs the result
   in a data frame. The input accelerometry data is expected to contain
   certain fields, namely acceleration measured in the x, y, and z
   directions, the time each measurement was taken, the id of the subject(s)
   either in a column or as a single value describing an entire file, and
   optionally the state of the subject (e.g. "sleep", "wake", "nonwear").
}
\examples{
filename <- system.file("extdata", "subject100010.csv",
                         package="accelerometR")
df <- read_data(path = filename,
                   id = '100010',
                   x = 'waistrawaxis1',
                   y = 'waistrawaxis2',
                   z = 'waistrawaxis3',
                   datetime = 'dttm',
                   rawstate = 'se_event')
str(df)
}

