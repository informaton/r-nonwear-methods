% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predict_accelerometR.R
\name{predict_accelerometR}
\alias{predict_accelerometR}
\title{Generate state predictions from accelerometry data using a variety of 
   statistical models.}
\usage{
predict_accelerometR(data, hmm_model = "default",
  randomForest_model = "default")
}
\arguments{
\item{data}{A data frame of accelerometry data. It is required to be in the 
format produced by the transform function in this package.}

\item{hmm_model}{Either a list of class \code{"hmm"} as produced by a call to 
\code{\link[mhsmm]{hmmfit}} or \code{\link{build}}
containing the hidden Markov model that will be used to generate one set
of predictions, or the string \code{"default"}, or \code{NULL}. If
\code{"default"} is passed, then the function uses the default hmm model
that gets loaded with this package. If \code{NULL}, then no hmm
predictions are produced.}

\item{randomForest_model}{Either a list of class \code{"randomForest"} as
produced by a call to \code{\link[randomForest]{randomForest}} or 
\code{\link{build}} containing the random Forest model
that will be used to generate one set of predictions, or the string
\code{"default"}, or \code{NULL}. If \code{"default"} is passed, then the
function uses the default random Forest model that gets loaded with this
package. If \code{NULL}, then no random Forest predictions are produced.}
}
\value{
A data frame with one column for the subject id, one column for time,
   and one column for each set of state predictions generated.
}
\description{
This is a convenience function that takes care of all of the
   many idiosyncracies involved in generating predictions from the various
   statistical models employed by the accelerometR package.

   The current version of accelerometR only uses mhsmm and randomForest
   models, but future versions will implement more.
}
\examples{
   # Using the default settings
   data(acclR_data)
   predictions1 <- predict_accelerometR(acclR_data)

   # Suppressing the hmm predictions
   predictions2 <- predict_accelerometR(acclR_data, hmm_model = NULL)

   # Using a small model built with accelerometR::build()
   results <- build(acclR_data, training_fraction = 0.75, ntree = 100,
   maxnodes = 10)
   predictions3 <- predict_accelerometR(acclR_data,
   hmm_model = results$hmm$model,
   randomForest_model = results$randomForest$model)
}

